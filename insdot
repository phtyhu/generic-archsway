#!/bin/bash
# vim:fileencoding=utf-8:ft=config:fdm=marker foldlevel=0
# @Author: phtyhu (https://github.com/phtyhu)
# @Title: insdot: 带引导的 dotbot 多语言安装脚本
# Multilingual dotbot install script with guidance
#
# 注：使用 vim 时可以用 `za` 与 `zi` 切换折叠
# note: Use `za` or `zi` to toggle folding in vim.

# 初始化 - Initialize {{{
set -e
## 定义函数 - Define Functions
catlocale(){
  if test -f .tempconf/genv-locale.conf;then
    cat .tempconf/genv-locale.conf
  fi
}

nofail(){
while true;do if $@
then break;fi;done
}

listcreate(){
for i in $(sed -n "$(awk '/^###BEGINOFLINK/{print NR}' "$1"),$(awk '/^###ENDOFLINK/{print NR}' "$1")p" "$1"|cut -f1 -d"#"|awk '{print $1}'|cut -f1 -d":"|sed '/^$/d');do
  eval echo "$i";done
}

listoverwrite(){
for i in $(listcreate "$1"); do
if [ -e "$i" ] ;then echo "$i";fi
done
}
# 定义颜色 - Define colors
cNORMAL='\e[0m'
cCAUTION='\e[31m'
cNOTE='\e[33m'
# 定义路径 - Define paths
DOTBOT_DIR="dotbot"
DOTBOT_BIN="bin/dotbot"
BASEDIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
CONFIG="install.conf.yaml"
CONFIG_zh_CN="install.conf.zh_CN.yaml"
CONFIGPATH="${BASEDIR}"/"${CONFIG}"
CONFIGPATH_zh_CN="${BASEDIR}"/"${CONFIG_zh_CN}"
cd "${BASEDIR}"
mkdir -p .tempconf
# }}}

# getopt {{{
## 定义帮助函数 - Define help function
showhelp(){
  case "$LANG" in
    "zh_CN.UTF-8")
echo -e "语法：$0 [选项]...
多语言的 dotbo 安装脚本。作者是 ${cNOTE}phtyhu (https://github.com/phtyhu)${cNORMAL}，此脚本用于 ${cNOTE}generic-archsway (https://github.com/phtyhu/generic-archsway)${cNORMAL}

若无指定选项，则运行默认的安装流程。
${cNOTE}  -h, --help          ${cNORMAL}显示此帮助信息
${cNOTE}      --listow=<文件> ${cNORMAL}显示指定 yaml<文件>的覆盖信息并退出
${cNOTE}      --listcr=<文件> ${cNORMAL}显示指定 yaml<文件>的创建信息并退出
${cNOTE}  -d, --deps          ${cNORMAL}安装依赖（若不指定，则仅第一次时安装依赖）
${cNOTE}  -l, --lang=<lang>   ${cNORMAL}选择语言环境，例如 --lang=zh_CN
${cNOTE}  -a, --ascii         ${cNORMAL}ASCII 显示模式，强制以英文显示，即使其他语言已经通过 --lang 指定
${cNOTE}      --askow=y|n     ${cNORMAL}在安装前提示(y)或不提示(n)确认覆盖信息（若不指定，则仅首次安装时提示）
${cNOTE}  -c                  ${cNORMAL}相当于 --askow=y
${cNOTE}  -r, --reset         ${cNORMAL}重置模式（删除 .tempconf）"
  ;;
    *) 
echo -e "Syntax: $0 [Options]...
Multilingua dotbot install script by ${cNOTE}phtyhu (https://github.com/phtyhu)${cNORMAL}, used in ${cNOTE}generic-archsway (https://github.com/phtyhu/generic-archsway)${cNORMAL}

If no option is specified, run default setup process.
${cNOTE}  -h, --help         ${cNORMAL}Print this help message and exit
${cNOTE}      --listow=file  ${cNORMAL}List the overwrite information of specified yaml <file> and exit
${cNOTE}      --listcr=file  ${cNORMAL}List the create information of specified yaml <file> and exit
${cNOTE}  -d, --deps         ${cNORMAL}Install dependencies (if not specified, then only install for first time installation)
${cNOTE}  -l, --lang=<lang>  ${cNORMAL}Select language environment, e.g. --lang=zh_CN
${cNOTE}  -a, --ascii        ${cNORMAL}ASCII display mode, forcely display in English even if other language is specified with --lang
${cNOTE}      --askow=y|n    ${cNORMAL}Prompt(y) or NOT prompt(n) for confirming overwriting information before installation (if not specified, then only prompt for first time installation)
${cNOTE}  -c                 ${cNORMAL}Alias of --askow=y
${cNOTE}  -r, --reset        ${cNORMAL}Reset mode (delete .tempconf)"
  ;;
esac
}

## 解析参数并执行命令 - Parse parameters and execute commands
p=$(getopt -o rahcld:q -l reset,listow:,listcr:,ascii,help,lang:,askow:,deps -n "$0" -- "$@")
[ $? != 0 ] && echo "$0: Error when getopt, please recheck parameters." && exit 1
eval set -- "$p"
while true ; do
  case "$1" in
    -h|--help) showhelp;exit;;
    --listow) listoverwrite $2;exit;;
    --listcr) listcreate $2;exit;;
    -l|--lang)
    case $2 in
      "zh_CN") echo zh_CN>.tempconf/genv-locale.conf;;
      "en_US") echo en_US>.tempconf/genv-locale.conf;;
      "") echo -e "${cCAUTION}No argument for --lang.${cNORMAL}";exit 1;;
      *) echo -e "${cCAUTION}Wrong argument for --lang.${cNORMAL}";exit 1;;
    esac;shift 2;;
  -a|--ascii) touch .tempconf/ascii; shift ;;
  -d|--deps) INSTDEPS=y;shift;;
  -c) ASKOW=y;shift;;
  --askow)
  case $2 in
    ""|"y") ASKOW=y;;
    "n") ASKOW=n;;
    *) echo -e "${cCAUTION}Wrong argument for --askow.${cNORMAL}";exit 1;;
esac; shift 2 ;;
  -r|--reset) rm -rf .tempconf/*; shift ;;
  --) break ;;
  *) echo -e "$0: Wrong parameters.";exit 1;;
esac
done
# }}}

# 显示语言与本地化 - Display language and Localization {{{
## 由 install-ascii 调用此脚本时采用 ascii 显示模式（即英语），否则使用 unicode
## When this script is launched by install-ascii, use ascii display mode(i.e. English only), else use unicode.
if test -f .tempconf/ascii; then rm .tempconf/ascii;dplang=ascii;else dplang=unicode;fi
## 仅当不存在符合标准的 genv-locale.conf 时进行下一步的询问
## Prompt next only when no standard genv-locale.conf exists
case "$(catlocale)" in
"zh_CN"|"en_US") sleep 0 ;;
*) while true;do
## 询问要使用的语言环境
## Prompt to ask what language environment to be used
case $dplang in
"ascii")
echo "
1=zh_CN: Simplified Chinese, including input method, font, etc
2=en_US: English"
;;
"unicode")
echo "
1=zh_CN: 简体中文，包括输入法、字体等
2=en_US: English"
;;
esac
read -p "Select a number: " p
case $p in
[1]) echo zh_CN > .tempconf/genv-locale.conf ;break ;;
[2]) echo en_US > .tempconf/genv-locale.conf ;break ;;
*) echo -e "Please enter the ${cCAUTION}corresponding number${cNORMAL}."
esac 
done ;; esac
## 在 ascii 显示模式下，一律将显示语言变为英语；否则与选择的语言环境一致
## When in ascii display mode, set display language to English, else set to the same as what choosed before.
if [ $dplang = ascii ];then dplang="en_US";else dplang="$(catlocale)";fi
# }}}

# 初次安装时 - For first time installation {{{
if test -f .tempconf/installed; then sleep 0; else
  if [ -n ${ASKOW} ];then ASKOW=y;fi
  if [ -n ${INSTDEPS} ];then INSTDEPS=y;fi
fi
# }}}

# 安装依赖 - Install dependencies {{{
case $INSTDEPS in y)
./install-deps
;;esac
# }}}

# 确认是否覆盖 - Prompt for confirming overwriting {{{
case $ASKOW in y)
case "$dplang" in
"zh_CN")
echo -e "${cCAUTION}注意：${cNORMAL}
此脚本会根据${cNOTE} ${CONFIGPATH} , ${CONFIGPATH_zh_CN} ${cNORMAL}强制创建符号链接。
${cCAUTION}若相关文件与目录已存在，则会被覆盖！！
在执行前请务必确保你已经备份重要文件或目录！！！${cNORMAL}

输入 ${cNOTE}show${cNORMAL} 以查看将被覆盖的文件与目录的列表。
输入 ${cNOTE}yes${cNORMAL} 以${cCAUTION}确认执行${cNORMAL}此脚本。
输入 ${cNOTE}no${cNORMAL} 以退出。"
;;
"en_US")
echo -e "
${cCAUTION}ATTENTION:${cNORMAL}
The script will forcely create symlinks according to ${cNOTE}${CONFIGPATH} ${cNORMAL}.
${cCAUTION}If the related file or directory already exists, it will be OVERWRITTEN PERMANENTLY!!
MAKE SURE YOU HAVE BACKUPED FOR IMPORTANT FILES/DIRECTORIES!!! ${cNORMAL}

Enter ${cNOTE}show${cNORMAL} to show the list of file and directories which will be overwritten.
Enter ${cNOTE}yes${cNORMAL} to ${cCAUTION}CONFIRM EXECUSION${cNORMAL} of this script.
Enter ${cNOTE}no${cNORMAL} to exit."
;;
esac
while true;do
read -p "[yes/show/no]: " p
case $p in
"show")
case "$(catlocale)" in
"en_US")
listoverwrite "${CONFIGPATH}"|sort|uniq|less
;;
"zh_CN")
cat <(listoverwrite "${CONFIGPATH}") <(listoverwrite "${CONFIGPATH_zh_CN}")|sort|uniq|less
;;
esac
;;
"yes") break;;
"no") exit 0;;
esac
done
;;esac
# }}}

# 安装 - Install {{{
nofail git submodule update --init --recursive "${DOTBOT_DIR}"

#case "$(catlocale)" in
#"zh_CN")
#"${BASEDIR}/${DOTBOT_DIR}/${DOTBOT_BIN}" -d "${BASEDIR}" -c "${CONFIG}" "${@}"
#"${BASEDIR}/${DOTBOT_DIR}/${DOTBOT_BIN}" -d "${BASEDIR}" -c "${CONFIG_zh_CN}" "${@}"
#;;
#"en_US")
#"${BASEDIR}/${DOTBOT_DIR}/${DOTBOT_BIN}" -d "${BASEDIR}" -c "${CONFIG}" "${@}"
#;;
#esac
touch ${BASEDIR}/.tempconf/installed
case "$dplang" in
  "zh_CN") echo -e "${cNOTE}本次安装已全部完成。${cNORMAL}";;
  "en_US") echo -e "${cNOTE}The installation process has finished.${cNORMAL}";;
esac
# }}}

# 切换 shell - Switch shell {{{
if [ $(awk -F: -v user="$(whoami)" '$1 == user {print $NF}' /etc/passwd) != /bin/zsh ]
then 
  case "$dplang" in
    "zh_CN")echo "正在将默认 shell 切换到 zsh。";;
    "en_US")echo "Changing default shell to zsh.";;
  esac
  nofail sudo chsh -s /bin/zsh $(whoami)
fi
# }}}
